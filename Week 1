# Create some empty vectors to hold data temporarily

# City name column
city <- c()
# Weather column, rainy or cloudy, etc
weather <- c()
# Sky visibility column
visibility <- c()
# Current temperature column
temp <- c()
# Max temperature column
temp_min <- c()
# Min temperature column
temp_max <- c()
# Pressure column
pressure <- c()
# Humidity column
humidity <- c()
# Wind speed column
wind_speed <- c()
# Wind direction column
wind_deg <- c()
# Forecast timestamp
forecast_datetime <- c()
# Season column
# Note that for season, you can hard code a season value from levels Spring, Summer, Autumn, and Winter based on your current month.
season <- c()


# Get forecast data for a given city list
get_weather_forecaset_by_cities <- function(city_names){
    df <- data.frame()
    for (city_name in city_names){
        # Forecast API URL
        forecast_url <- 'https://api.openweathermap.org/data/2.5/forecast'
        # Create query parameters
        forecast_query <- list(q = city_name, appid = your_api_key, units="metric")
        # Make HTTP GET call for the given city
        response <- GET(forecast_url, query=forecast_query)
        # Note that the 5-day forecast JSON result is a list of lists. You can print the reponse to check the results
        json_result <- content(response, as="parsed")
        results <- json_result$list
        # Loop the json result
        for(result in results) {
            city <- c(city, city_name)
            
        }
        city <-c(city, json_result$name)
        weather <- c(weather, json_result$weather[[1]]$main)
        visibility <- c(visibility, json_result$visibility)
        temp <- c(temp, json_result$main$temp)
        temp_min <- c(temp_min, json_result$main$temp_min)
        temp_max <- c(temp_max, json_result$main$temp_max)
        pressure <- c(pressure, json_result$main$pressure)
        humidity <- c(humidity, json_result$main$humidity)
        wind_speed <- c(wind_speed, json_result$wind$speed)
        wind_deg <- c(wind_deg, json_result$wind$deg)
        forecast_datetime <- c(forecast_datetime, result$dt_txt)
           # Note that for season, you can hard code a season value from levels Spring, Summer, Autumn, and Winter based on your current month.
        months <- as.numeric(format(as.Date(forecast_datetime), '%m'))
        indx <- setNames( rep(c('winter', 'spring', 'summer',
                   'fall'),each=3), c(12,1:11))
        season <- unname(indx[as.character(months)])
    
        # Add the R Lists into a data frame
    }
    df <- data.frame(city=city,
                    weather=weather, 
                    visibility=visibility, 
                    temp=temp, 
                    temp_min=temp_min, 
                    temp_max=temp_max, 
                    pressure=pressure, 
                    humidity=humidity, 
                    wind_speed=wind_speed, 
                    wind_deg=wind_deg,
                    forecast_datetime=forecast_datetime,
                    season=season)
    # Return a data frame
    return(df)
    
}

cities <- c("Seoul", "Washington, D.C.", "Paris", "Suzhou")
cities_weather_df <- get_weather_forecaset_by_cities(cities)
head(cities_weather_df)
